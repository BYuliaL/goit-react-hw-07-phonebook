{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Form/Form.module.css","pages/HomePage.js","pages/RegisterPage.js","pages/LoginPage.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","pages/ContactsPage.js","components/Navigations/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","styles","container","minHeight","display","alignItems","justifyContent","title","fontWeight","fontSize","textAlign","HomePage","style","form","width","label","flexDirection","marginBottom","RegisterPage","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","autoComplete","type","onChange","Component","LoginPage","onLogin","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","dispatch","axios","get","then","data","catch","error","message","number","contact","console","log","post","contactId","delete","getItems","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","event","map","alert","className","pattern","required","form__button","connect","contactsSelectors","contactsOperations","Contacts","onDeleteContact","id","contactsList","contactsList__button","onClick","prototype","PropTypes","arrayOf","shape","string","isRequired","currentTarget","ContactsPage","fetchContacts","link","textDecoration","padding","color","activeLink","Navigation","to","exact","activeStyle","AuthNav","avatar","marginRight","UserMenu","onLogout","header","borderBottom","AppBar","isAuthenticated","App","path","component","createReducer","_","payload","action","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactsReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcaf3464.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__Chcrh\",\"contactsList__button\":\"Contacts_contactsList__button__1JOHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__button\":\"Form_form__button__9ij5z\",\"form__label\":\"Form_form__label__23Nn4\"};","const styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\n\nconst HomePage = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>Приветственная страница нашего сервиса </h1>\n  </div>\n);\n\nexport default HomePage;\n","import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass RegisterPage extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Страница регистрации</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Parol\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Зарегистрироваться</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = {\n//   onRegister: authOperations.register,\n// };\n\nexport default RegisterPage;\n","import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass LoginPage extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Login page</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Parol\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">LogIn</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = {\n//   onLogin: authOperations.logIn,\n// };\n\nexport default LoginPage;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('contacts/filter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './contacts-actions';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error.message)));\n};\n\nconst addContacts = (name, number) => dispatch => {\n  const contact = { name, number };\n  console.log(contact);\n\n  dispatch(addContactsRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\n    .catch(error => dispatch(addContactsError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactsRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactsSuccess(contactId)))\n    .catch(error => dispatch(deleteContactsError(error.message)));\n};\n\n// eslint-disable-next-line\nexport default {\n  fetchContacts,\n  addContacts,\n  deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getItems = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\n// const getVisibleContacts = state => {\n//   const filter = getFilter(state);\n//   const contacts = getItems(state);\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// МЕМОИЗАЦИЯ\n\nconst getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line\nexport default {\n  getItems,\n  getFilter,\n  getVisibleContacts,\n};\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport style from './Form.module.css';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    const { name } = this.state;\n\n    event.preventDefault();\n\n    const inputValue = this.props.contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (inputValue) {\n      alert(`Name '${name}' is already in contacts`);\n    } else {\n      this.props.onSubmit(this.state);\n    }\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          Name\n          <br />\n          <input\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <br />\n        <label className={styles.label}>\n          Namber\n          <br />\n          <input\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <br />\n        <button className={style.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsOperations.addContacts(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport styles from './Contacts.module.css';\n\nconst Contacts = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactsList}>\n          {name}, {number}\n          <button\n            className={styles.contactsList__button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import PropTypes from 'prop-types';\n// import styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n\nconst styles = {\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name: <br />\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Form from '../components/Form';\nimport Contacts from '../components/Contacts';\nimport Filter from '../components/Filter';\nimport { contactsOperations } from '../redux/contacts';\n\nclass ContactsPage extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <h2>Phonebook</h2> */}\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactsPage);\n","import { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Contacts\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","// import { connect } from 'react-redux';\n// import { authSelectors, authOperations } from '../../redux/auth';\n// import defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    {/* <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} /> */}\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nexport default UserMenu;\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport Navigation from '../Navigations/Navigation';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\nexport default AppBar;\n","import { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\n\nimport HomePage from './pages/HomePage';\nimport RegisterPage from './pages/RegisterPage';\nimport LoginPage from './pages/LoginPage';\nimport ContactsPage from './pages/ContactsPage';\nimport AppBar from './components/AppBar/AppBar';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <AppBar />\n\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/contacts\" component={ContactsPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({ items, filter, loading, error });\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}