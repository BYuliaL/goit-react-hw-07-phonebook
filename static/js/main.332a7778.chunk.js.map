{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","components/Navigations/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRouter/PublicRouter.js","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","console","log","data","registerSuccess","registerError","message","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","_","payload","setError","error","isAuthenticated","combineReducers","getIsAuthenticated","state","getUsername","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","AuthNav","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","type","onClick","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","this","onGetCurretnUser","fallback","PublicRouter","path","items","action","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","rootReducer","contacts","contactsReducer","persistReducer","authReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.332a7778.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('contacts/filter');\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    console.log(response.data);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n// eslint-disable-next-line\nexport default { register, logOut, logIn, getCurrentUser };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginSuccess]: setError,\n  [authActions.logoutSuccess]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\n// eslint-disable-next-line\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n// eslint-disable-next-line\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Register\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from '../Navigations/Navigation';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRouter from './components/PublicRouter';\n\nimport { authOperations } from './redux/auth';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar />\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRouter exact path=\"/\" component={HomePage} />\n            <PublicRouter\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterPage}\n            />\n            <PublicRouter\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginPage}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsPage}\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({ items, filter, loading, error });\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  auth: persistReducer(authPersistConfig, authReducer),\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}